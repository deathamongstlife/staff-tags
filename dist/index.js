(function(A,C,u,d,T,p,h,i,L,N){"use strict";const{Permissions:x}=d.constants,O=u.findByProps("computePermissions","canEveryoneRole"),I=O?.computePermissions,k=u.findByStoreName("GuildMemberStore"),E=[d.i18n?.Messages?.AI_TAG,d.i18n?.Messages?.BOT_TAG_SERVER,d.i18n?.Messages?.SYSTEM_DM_TAG_SYSTEM,d.i18n?.Messages?.GUILD_AUTOMOD_USER_BADGE_TEXT,d.i18n?.Messages?.REMIXING_TAG].filter(Boolean),$=[{text:"WEBHOOK",condition:function(t,e,r){return r?.isNonUserBot?.()}},{text:"OWNER",backgroundColor:p.rawColors.ORANGE_345,condition:function(t,e,r){return t?.ownerId===r?.id}},{text:d.i18n?.Messages?.BOT_TAG_BOT||"BOT",condition:function(t,e,r){return r?.bot},verified:function(t,e,r){return r?.isVerifiedBot?.()}},{text:"ADMIN",backgroundColor:p.rawColors.RED_560,permissions:["ADMINISTRATOR"]},{text:"MANAGER",backgroundColor:p.rawColors.GREEN_345,permissions:["MANAGE_GUILD","MANAGE_CHANNELS","MANAGE_ROLES","MANAGE_WEBHOOKS"]},{text:"MOD",backgroundColor:p.rawColors.BLUE_345,permissions:["MANAGE_MESSAGES","KICK_MEMBERS","BAN_MEMBERS"]}];function R(t,e,r){try{if(!r)return null;let l;if(t&&I&&x)try{const o=I({user:r,context:t,overwrites:e?.permissionOverwrites});l=Object.entries(x).map(function(n){let[s,a]=n;return o&a?s:""}).filter(Boolean)}catch(o){console.error("Staff Tags - Permission computation error:",o),l=[]}for(const o of $)try{const n=o.condition?.(t,e,r),s=o.permissions?.some(function(a){return l?.includes(a)});if(n||s){let a;if(C.storage.useRoleColor&&t?.id&&r?.id)try{a=k?.getMember?.(t.id,r.id)?.colorString}catch(S){console.error("Staff Tags - Role color error:",S)}let f=a||o.backgroundColor||p.rawColors.BRAND_500,c;try{c=a||!o.textColor?d.chroma(f).get("lab.l")<70?p.rawColors.WHITE_500:p.rawColors.BLACK_500:o.textColor}catch{c=p.rawColors.WHITE_500}return{...o,textColor:c,backgroundColor:f,verified:typeof o.verified=="function"?o.verified(t,e,r):o.verified??!1,condition:void 0,permissions:void 0}}}catch(n){console.error("Staff Tags - Tag processing error:",n);continue}return null}catch(l){return console.error("Staff Tags - getTag error:",l),null}}const v=u.findByName("getTagProperties",!1),D=u.findByStoreName("GuildStore"),K=u.findByStoreName("ChannelStore");function P(){return v?T.after("default",v,function(t,e){let[{message:r}]=t;try{if(!e||!r||E.includes(e.tagText))return e;const l=K?.getChannel?.(r.channel_id),o=D?.getGuild?.(l?.guild_id),n=R(o,l,r.author);if(n)return{...e,tagText:n.text,tagTextColor:n.textColor?d.ReactNative.processColor(d.chroma(n.textColor).hex()):void 0,tagBackgroundColor:n.backgroundColor?d.ReactNative.processColor(d.chroma(n.backgroundColor).hex()):void 0,tagVerified:n.verified,tagType:void 0}}catch(l){console.error("Staff Tags - Chat patch error:",l)}return e}):(console.error("Staff Tags - getTagProperties not found"),function(){})}const w=u.findByProps("getBotLabel"),G=w?.getBotLabel,H=u.findByStoreName("GuildStore"),V=function(t,e){let[{guildId:r,user:l}]=t;try{if(!e?.props?.label||!G)return e;const o=h.findInReactTree(e.props.label,function(s){return s?.type?.Types}),n=o?G(o.props?.type):null;if(!o||!E.includes(n)){const s=H?.getGuild?.(r),a=R(s,void 0,l);if(a&&w?.default)if(o)o.props={type:0,...a};else{const f=h.findInReactTree(e.props.label,function(c){return c?.props?.lineClamp});if(f?.props?.children?.props?.children){const c=f.props.children.props.children;Array.isArray(c)&&c.length>1&&(c[1]=React.createElement(React.Fragment,null," ",React.createElement(w.default,{type:0,text:a.text,textColor:a.textColor,backgroundColor:a.backgroundColor,verified:a.verified})))}}}}catch(o){console.error("Staff Tags - Details patch error:",o)}return e};function W(){const t=[];try{const e=u.findByTypeNameAll("UserRow");e?.length>0&&e.forEach(function(r){r?.type&&t.push(T.after("type",r,V))})}catch(e){console.error("Staff Tags - Failed to patch UserRow:",e)}return function(){t.forEach(function(e){try{e?.()}catch(r){console.error("Staff Tags - Unpatch error:",r)}})}}const M=u.findByName("DisplayName",!1),_=u.findByName("HeaderName",!1),B=u.findByProps("getBotLabel"),m=B?.getBotLabel,j=u.findByStoreName("GuildStore"),X=u.findByStoreName("ChannelStore");function Y(){const t=[];return _&&t.push(T.after("default",_,function(e,r){let[{channelId:l}]=e;try{r?.props&&(r.props.channelId=l)}catch(o){console.error("Staff Tags - HeaderName patch error:",o)}})),M&&t.push(T.after("default",M,function(e,r){let[{guildId:l,channelId:o,user:n}]=e;try{if(!r||!m)return;const s=h.findInReactTree(r,function(a){return a?.type?.Types});if(!s||!E.includes(m(s.props?.type))){const a=j?.getGuild?.(l),f=X?.getChannel?.(o),c=R(a,f,n);if(c&&B?.default)if(s)s.props={type:0,...c};else{const S=h.findInReactTree(r,function(ne){return ne?.props?.style?.flexDirection==="row"});S?.props?.children&&Array.isArray(S.props.children)&&S.props.children.push(React.createElement(B.default,{style:{marginLeft:0},type:0,text:c.text,textColor:c.textColor,backgroundColor:c.backgroundColor,verified:c.verified}))}}}catch(s){console.error("Staff Tags - DisplayName patch error:",s)}})),function(){return t.forEach(function(e){try{e?.()}catch(r){console.error("Staff Tags - Name unpatch error:",r)}})}}const F=u.findByProps("GuildMemberRow"),b=u.findByProps("getBotLabel"),U=b?.getBotLabel,q=u.findByStoreName("GuildStore");let g=0;function z(){return F?.GuildMemberRow?b?.default?(i.showToast("\u2705 Sidebar patch loaded",i.showToast.Kind.SUCCESS),T.after("type",F.GuildMemberRow,function(t,e){let[{guildId:r,channel:l,user:o}]=t;try{if(g++,g<=5&&i.showToast(`\u{1F50D} Processing: ${o?.username||"unknown"}`,i.showToast.Kind.INFO),!e||!U||!o)return g<=5&&i.showToast("\u26A0\uFE0F Missing data",i.showToast.Kind.FAILURE),e;const n=q?.getGuild?.(r),s=R(n,l,o);if(s){g<=5&&i.showToast(`\u{1F3F7}\uFE0F Tag found: ${s.text}`,i.showToast.Kind.SUCCESS);const a=h.findInReactTree(e,function(f){return f?.type?.Types});if(!a||!E.includes(U(a.props?.type)))if(a)a.props={type:0,...s},g<=5&&i.showToast("\u270F\uFE0F Updated existing tag",i.showToast.Kind.INFO);else{const f=h.findInReactTree(e,function(c){return c?.props?.style?.flexDirection==="row"});f?.props?.children&&Array.isArray(f.props.children)?(f.props.children.push(React.createElement(b.default,{type:0,text:s.text,textColor:s.textColor,backgroundColor:s.backgroundColor,verified:s.verified})),g<=5&&i.showToast("\u2795 Added tag to member",i.showToast.Kind.SUCCESS)):g<=5&&i.showToast("\u274C No insertion point found",i.showToast.Kind.FAILURE)}}else g<=5&&i.showToast(`\u2139\uFE0F No tag for ${o.username}`,i.showToast.Kind.INFO)}catch(n){i.showToast(`\u{1F4A5} Error: ${n.message}`,i.showToast.Kind.FAILURE)}return e})):(i.showToast("\u274C TagModule not found",i.showToast.Kind.FAILURE),function(){}):(i.showToast("\u274C GuildMemberRow not found",i.showToast.Kind.FAILURE),function(){})}const J=u.findByProps("getBotLabel");function Q(){return T.after("default",J,function(t,e){let[{text:r,textColor:l,backgroundColor:o}]=t;try{const n=h.findInReactTree(e,function(s){return typeof s?.props?.children=="string"});n?.props&&(r&&(n.props.children=r),l&&(n.props.style||(n.props.style=[]),Array.isArray(n.props.style)?n.props.style.push({color:l}):n.props.style=[n.props.style,{color:l}])),o&&e?.props&&(e.props.style||(e.props.style=[]),Array.isArray(e.props.style)?e.props.style.push({backgroundColor:o}):e.props.style=[e.props.style,{backgroundColor:o}])}catch(n){console.error("Staff Tags - Tag patch error:",n)}})}const{ScrollView:Z}=N.General,{FormSection:ee,FormSwitchRow:re}=N.Forms;function oe(){return L.useProxy(C.storage),React.createElement(Z,{style:{flex:1}},React.createElement(ee,{title:"Tag style"},React.createElement(re,{label:"Use top role color for tag backgrounds",value:C.storage.useRoleColor,onValueChange:function(t){C.storage.useRoleColor=t}})))}let y=[];var te={onLoad:function(){try{C.storage.useRoleColor??=!1,y.push(P()),y.push(Q()),y.push(Y()),y.push(z()),y.push(W()),console.log("Staff Tags loaded successfully")}catch(t){throw console.error("Staff Tags - Load error:",t),t}},onUnload:function(){try{y.forEach(function(t){try{t?.()}catch(e){console.error("Staff Tags - Unpatch error:",e)}}),y=[],console.log("Staff Tags unloaded successfully")}catch(t){console.error("Staff Tags - Unload error:",t)}},settings:oe};return A.default=te,Object.defineProperty(A,"__esModule",{value:!0}),A})({},vendetta.plugin,vendetta.metro,vendetta.metro.common,vendetta.patcher,vendetta.ui,vendetta.utils,vendetta.ui.toasts,vendetta.storage,vendetta.ui.components);
