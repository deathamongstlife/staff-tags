(function(B,h,a,f,p,g,C,U,N){"use strict";const{Permissions:R}=f.constants,$=a.findByProps("computePermissions","canEveryoneRole"),x=$?.computePermissions,D=a.findByStoreName("GuildMemberStore"),E=[f.i18n?.Messages?.AI_TAG,f.i18n?.Messages?.BOT_TAG_SERVER,f.i18n?.Messages?.SYSTEM_DM_TAG_SYSTEM,f.i18n?.Messages?.GUILD_AUTOMOD_USER_BADGE_TEXT,f.i18n?.Messages?.REMIXING_TAG].filter(Boolean),P=[{text:"WEBHOOK",condition:function(o,e,r){return r?.isNonUserBot?.()}},{text:"OWNER",backgroundColor:g.rawColors.ORANGE_345,condition:function(o,e,r){return o?.ownerId===r?.id}},{text:f.i18n?.Messages?.BOT_TAG_BOT||"BOT",condition:function(o,e,r){return r?.bot},verified:function(o,e,r){return r?.isVerifiedBot?.()}},{text:"ADMIN",backgroundColor:g.rawColors.RED_560,permissions:["ADMINISTRATOR"]},{text:"MANAGER",backgroundColor:g.rawColors.GREEN_345,permissions:["MANAGE_GUILD","MANAGE_CHANNELS","MANAGE_ROLES","MANAGE_WEBHOOKS"]},{text:"MOD",backgroundColor:g.rawColors.BLUE_345,permissions:["MANAGE_MESSAGES","KICK_MEMBERS","BAN_MEMBERS"]}];function T(o,e,r){try{if(!r)return null;let s;if(o&&x&&R)try{const t=x({user:r,context:o,overwrites:e?.permissionOverwrites});s=Object.entries(R).map(function(n){let[l,c]=n;return t&c?l:""}).filter(Boolean)}catch(t){console.error("Staff Tags - Permission computation error:",t),s=[]}for(const t of P)try{const n=t.condition?.(o,e,r),l=t.permissions?.some(function(c){return s?.includes(c)});if(n||l){let c;if(h.storage.useRoleColor&&o?.id&&r?.id)try{c=D?.getMember?.(o.id,r.id)?.colorString}catch(u){console.error("Staff Tags - Role color error:",u)}let d=c||t.backgroundColor||g.rawColors.BRAND_500,i;try{i=c||!t.textColor?f.chroma(d).get("lab.l")<70?g.rawColors.WHITE_500:g.rawColors.BLACK_500:t.textColor}catch{i=g.rawColors.WHITE_500}return{...t,textColor:i,backgroundColor:d,verified:typeof t.verified=="function"?t.verified(o,e,r):t.verified??!1,condition:void 0,permissions:void 0}}}catch(n){console.error("Staff Tags - Tag processing error:",n);continue}return null}catch(s){return console.error("Staff Tags - getTag error:",s),null}}const M=a.findByName("getTagProperties",!1),H=a.findByStoreName("GuildStore"),V=a.findByStoreName("ChannelStore");function F(){return M?p.after("default",M,function(o,e){let[{message:r}]=o;try{if(!e||!r||E.includes(e.tagText))return e;const s=V?.getChannel?.(r.channel_id),t=H?.getGuild?.(s?.guild_id),n=T(t,s,r.author);if(n)return{...e,tagText:n.text,tagTextColor:n.textColor?f.ReactNative.processColor(f.chroma(n.textColor).hex()):void 0,tagBackgroundColor:n.backgroundColor?f.ReactNative.processColor(f.chroma(n.backgroundColor).hex()):void 0,tagVerified:n.verified,tagType:void 0}}catch(s){console.error("Staff Tags - Chat patch error:",s)}return e}):(console.error("Staff Tags - getTagProperties not found"),function(){})}const b=a.findByProps("getBotLabel"),v=b?.getBotLabel,K=a.findByStoreName("GuildStore"),W=function(o,e){let[{guildId:r,user:s}]=o;try{if(!e?.props?.label||!v)return e;const t=C.findInReactTree(e.props.label,function(l){return l?.type?.Types}),n=t?v(t.props?.type):null;if(!t||!E.includes(n)){const l=K?.getGuild?.(r),c=T(l,void 0,s);if(c&&b?.default)if(t)t.props={type:0,...c};else{const d=C.findInReactTree(e.props.label,function(i){return i?.props?.lineClamp});if(d?.props?.children?.props?.children){const i=d.props.children.props.children;Array.isArray(i)&&i.length>1&&(i[1]=React.createElement(React.Fragment,null," ",React.createElement(b.default,{type:0,text:c.text,textColor:c.textColor,backgroundColor:c.backgroundColor,verified:c.verified})))}}}}catch(t){console.error("Staff Tags - Details patch error:",t)}return e};function j(){const o=[];try{const e=a.findByTypeNameAll("UserRow");e?.length>0&&e.forEach(function(r){r?.type&&o.push(p.after("type",r,W))})}catch(e){console.error("Staff Tags - Failed to patch UserRow:",e)}return function(){o.forEach(function(e){try{e?.()}catch(r){console.error("Staff Tags - Unpatch error:",r)}})}}const _=a.findByName("DisplayName",!1),m=a.findByName("HeaderName",!1),A=a.findByProps("getBotLabel"),G=A?.getBotLabel,X=a.findByStoreName("GuildStore"),Y=a.findByStoreName("ChannelStore");function q(){const o=[];return m&&o.push(p.after("default",m,function(e,r){let[{channelId:s}]=e;try{r?.props&&(r.props.channelId=s)}catch(t){console.error("Staff Tags - HeaderName patch error:",t)}})),_&&o.push(p.after("default",_,function(e,r){let[{guildId:s,channelId:t,user:n}]=e;try{if(!r||!G)return;const l=C.findInReactTree(r,function(c){return c?.type?.Types});if(!l||!E.includes(G(l.props?.type))){const c=X?.getGuild?.(s),d=Y?.getChannel?.(t),i=T(c,d,n);if(i&&A?.default)if(l)l.props={type:0,...i};else{const u=C.findInReactTree(r,function(S){return S?.props?.style?.flexDirection==="row"});u?.props?.children&&Array.isArray(u.props.children)&&u.props.children.push(React.createElement(A.default,{style:{marginLeft:0},type:0,text:i.text,textColor:i.textColor,backgroundColor:i.backgroundColor,verified:i.verified}))}}}catch(l){console.error("Staff Tags - DisplayName patch error:",l)}})),function(){return o.forEach(function(e){try{e?.()}catch(r){console.error("Staff Tags - Name unpatch error:",r)}})}}const I=a.findByProps("getBotLabel"),z=a.findByStoreName("GuildStore"),k=a.findByName("MemberListItem",!1),w=a.findByName("VoiceUser",!1),L=a.findByName("Member",!1),O=a.findByName("ConnectedMember",!1);function J(){const o=[],e=function(r){return function(s,t){let[n]=s;try{const{guildId:l,channel:c,user:d}=n||{};if(!t||!d)return t;const i=z?.getGuild?.(l),u=T(i,c,d);if(u&&I?.default){const S=React.createElement(I.default,{type:0,text:u.text+`[${r}]`,textColor:u.textColor,backgroundColor:u.backgroundColor,verified:u.verified});t.props?.children&&(Array.isArray(t.props.children)?t.props.children.push(S):t.props.children=[t.props.children,S])}}catch{}return t}};return k&&o.push(p.after("default",k,e("MemberListItem"))),w&&o.push(p.after("default",w,e("VoiceUser"))),L&&o.push(p.after("default",L,e("Member"))),O&&o.push(p.after("default",O,e("ConnectedMember"))),function(){o.forEach(function(r){try{r?.()}catch{}})}}const Q=a.findByProps("getBotLabel");function Z(){return p.after("default",Q,function(o,e){let[{text:r,textColor:s,backgroundColor:t}]=o;try{const n=C.findInReactTree(e,function(l){return typeof l?.props?.children=="string"});n?.props&&(r&&(n.props.children=r),s&&(n.props.style||(n.props.style=[]),Array.isArray(n.props.style)?n.props.style.push({color:s}):n.props.style=[n.props.style,{color:s}])),t&&e?.props&&(e.props.style||(e.props.style=[]),Array.isArray(e.props.style)?e.props.style.push({backgroundColor:t}):e.props.style=[e.props.style,{backgroundColor:t}])}catch(n){console.error("Staff Tags - Tag patch error:",n)}})}const{ScrollView:ee}=N.General,{FormSection:re,FormSwitchRow:te}=N.Forms;function oe(){return U.useProxy(h.storage),React.createElement(ee,{style:{flex:1}},React.createElement(re,{title:"Tag style"},React.createElement(te,{label:"Use top role color for tag backgrounds",value:h.storage.useRoleColor,onValueChange:function(o){h.storage.useRoleColor=o}})))}let y=[];var ne={onLoad:function(){try{h.storage.useRoleColor??=!1,y.push(F()),y.push(Z()),y.push(q()),y.push(J()),y.push(j()),console.log("Staff Tags loaded successfully")}catch(o){throw console.error("Staff Tags - Load error:",o),o}},onUnload:function(){try{y.forEach(function(o){try{o?.()}catch(e){console.error("Staff Tags - Unpatch error:",e)}}),y=[],console.log("Staff Tags unloaded successfully")}catch(o){console.error("Staff Tags - Unload error:",o)}},settings:oe};return B.default=ne,Object.defineProperty(B,"__esModule",{value:!0}),B})({},vendetta.plugin,vendetta.metro,vendetta.metro.common,vendetta.patcher,vendetta.ui,vendetta.utils,vendetta.storage,vendetta.ui.components);
