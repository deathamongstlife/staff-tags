(function(S,h,l,f,y,d,p,A,R){"use strict";const{Permissions:b}=f.constants,G=l.findByProps("computePermissions","canEveryoneRole"),x=G?.computePermissions,M=l.findByStoreName("GuildMemberStore"),C=[f.i18n?.Messages?.AI_TAG,f.i18n?.Messages?.BOT_TAG_SERVER,f.i18n?.Messages?.SYSTEM_DM_TAG_SYSTEM,f.i18n?.Messages?.GUILD_AUTOMOD_USER_BADGE_TEXT,f.i18n?.Messages?.REMIXING_TAG].filter(Boolean),I=[{text:"WEBHOOK",condition:function(t,e,r){return r?.isNonUserBot?.()}},{text:"OWNER",backgroundColor:d.rawColors.ORANGE_345,condition:function(t,e,r){return t?.ownerId===r?.id}},{text:f.i18n?.Messages?.BOT_TAG_BOT||"BOT",condition:function(t,e,r){return r?.bot},verified:function(t,e,r){return r?.isVerifiedBot?.()}},{text:"ADMIN",backgroundColor:d.rawColors.RED_560,permissions:["ADMINISTRATOR"]},{text:"MANAGER",backgroundColor:d.rawColors.GREEN_345,permissions:["MANAGE_GUILD","MANAGE_CHANNELS","MANAGE_ROLES","MANAGE_WEBHOOKS"]},{text:"MOD",backgroundColor:d.rawColors.BLUE_345,permissions:["MANAGE_MESSAGES","KICK_MEMBERS","BAN_MEMBERS"]}];function T(t,e,r){try{if(!r)return null;let s;if(t&&x&&b)try{const o=x({user:r,context:t,overwrites:e?.permissionOverwrites});s=Object.entries(b).map(function(n){let[i,a]=n;return o&a?i:""}).filter(Boolean)}catch(o){console.error("Staff Tags - Permission computation error:",o),s=[]}for(const o of I)try{const n=o.condition?.(t,e,r),i=o.permissions?.some(function(a){return s?.includes(a)});if(n||i){let a;if(h.storage.useRoleColor&&t?.id&&r?.id)try{a=M?.getMember?.(t.id,r.id)?.colorString}catch(E){console.error("Staff Tags - Role color error:",E)}let u=a||o.backgroundColor||d.rawColors.BRAND_500,c;try{c=a||!o.textColor?f.chroma(u).get("lab.l")<70?d.rawColors.WHITE_500:d.rawColors.BLACK_500:o.textColor}catch{c=d.rawColors.WHITE_500}return{...o,textColor:c,backgroundColor:u,verified:typeof o.verified=="function"?o.verified(t,e,r):o.verified??!1,condition:void 0,permissions:void 0}}}catch(n){console.error("Staff Tags - Tag processing error:",n);continue}return null}catch(s){return console.error("Staff Tags - getTag error:",s),null}}const w=l.findByName("getTagProperties",!1),m=l.findByStoreName("GuildStore"),k=l.findByStoreName("ChannelStore");function O(){return y.after("default",w,function(t,e){let[{message:r}]=t;if(!C.includes(e.tagText)){const s=k.getChannel(r.channel_id),o=m.getGuild(s?.guild_id),n=T(o,s,r.author);if(n)return{...e,tagText:n.text,tagTextColor:n.textColor?f.ReactNative.processColor(f.chroma(n.textColor).hex()):void 0,tagBackgroundColor:n.backgroundColor?f.ReactNative.processColor(f.chroma(n.backgroundColor).hex()):void 0,tagVerified:n.verified,tagType:void 0}}})}const B=l.findByProps("getBotLabel"),v=B?.getBotLabel,L=l.findByStoreName("GuildStore"),D=function(t,e){let[{guildId:r,user:s}]=t;try{if(!e?.props?.label||!v)return e;const o=p.findInReactTree(e.props.label,function(i){return i?.type?.Types}),n=o?v(o.props?.type):null;if(!o||!C.includes(n)){const i=L?.getGuild?.(r),a=T(i,void 0,s);if(a&&B?.default)if(o)o.props={type:0,...a};else{const u=p.findInReactTree(e.props.label,function(c){return c?.props?.lineClamp});if(u?.props?.children?.props?.children){const c=u.props.children.props.children;Array.isArray(c)&&c.length>1&&(c[1]=React.createElement(React.Fragment,null," ",React.createElement(B.default,{type:0,text:a.text,textColor:a.textColor,backgroundColor:a.backgroundColor,verified:a.verified})))}}}}catch(o){console.error("Staff Tags - Details patch error:",o)}return e};function U(){const t=[];try{const e=l.findByTypeNameAll("UserRow");e?.length>0&&e.forEach(function(r){r?.type&&t.push(y.after("type",r,D))})}catch(e){console.error("Staff Tags - Failed to patch UserRow:",e)}return function(){t.forEach(function(e){try{e?.()}catch(r){console.error("Staff Tags - Unpatch error:",r)}})}}const P=l.findByName("DisplayName",!1),$=l.findByName("HeaderName",!1),N=l.findByProps("getBotLabel"),H=N.getBotLabel,F=l.findByStoreName("GuildStore"),K=l.findByStoreName("ChannelStore");function V(){const t=[];return t.push(y.after("default",$,function(e,r){let[{channelId:s}]=e;r.props.channelId=s})),t.push(y.after("default",P,function(e,r){let[{guildId:s,channelId:o,user:n}]=e;const i=p.findInReactTree(r,function(a){return a.type.Types});if(!i||!C.includes(H(i.props.type))){const a=F.getGuild(s),u=K.getChannel(o),c=T(a,u,n);c&&(i?i.props={type:0,...c}:p.findInReactTree(r,function(E){return E.props.style.flexDirection==="row"}).props.children.push(React.createElement(N.default,{style:{marginLeft:0},type:0,text:c.text,textColor:c.textColor,backgroundColor:c.backgroundColor,verified:c.verified})))}})),function(){return t.forEach(function(e){return e()})}}const W=l.findByProps("GuildMemberRow"),_=l.findByProps("getBotLabel"),j=_.getBotLabel,X=l.findByStoreName("GuildStore");function Y(){return y.after("type",W.GuildMemberRow,function(t,e){let[{guildId:r,channel:s,user:o}]=t;const n=p.findInReactTree(e,function(i){return i.type.Types});if(!n||!C.includes(j(n.props.type))){const i=X.getGuild(r),a=T(i,s,o);a&&(n?n.props={type:0,...a}:p.findInReactTree(e,function(u){return u.props.style.flexDirection==="row"}).props.children.splice(2,0,React.createElement(_.default,{type:0,text:a.text,textColor:a.textColor,backgroundColor:a.backgroundColor,verified:a.verified})))}})}const q=l.findByProps("getBotLabel");function z(){return y.after("default",q,function(t,e){let[{text:r,textColor:s,backgroundColor:o}]=t;const n=p.findInReactTree(e,function(i){return typeof i.props.children=="string"});r&&(n.props.children=r),s&&n.props.style.push({color:s}),o&&e.props.style.push({backgroundColor:o})})}const{ScrollView:J}=R.General,{FormSection:Q,FormSwitchRow:Z}=R.Forms;function ee(){return A.useProxy(h.storage),React.createElement(J,{style:{flex:1}},React.createElement(Q,{title:"Tag style"},React.createElement(Z,{label:"Use top role color for tag backgrounds",value:h.storage.useRoleColor,onValueChange:function(t){h.storage.useRoleColor=t}})))}let g=[];var te={onLoad:function(){try{h.storage.useRoleColor??=!1,g.push(O()),g.push(z()),g.push(V()),g.push(Y()),g.push(U()),console.log("Staff Tags loaded successfully")}catch(t){throw console.error("Staff Tags - Load error:",t),t}},onUnload:function(){try{g.forEach(function(t){try{t?.()}catch(e){console.error("Staff Tags - Unpatch error:",e)}}),g=[],console.log("Staff Tags unloaded successfully")}catch(t){console.error("Staff Tags - Unload error:",t)}},settings:ee};return S.default=te,Object.defineProperty(S,"__esModule",{value:!0}),S})({},vendetta.plugin,vendetta.metro,vendetta.metro.common,vendetta.patcher,vendetta.ui,vendetta.utils,vendetta.storage,vendetta.ui.components);
