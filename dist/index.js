(function(E,y,l,f,p,d,T,w,x){"use strict";const{Permissions:A}=f.constants,D=l.findByProps("computePermissions","canEveryoneRole"),N=D?.computePermissions,O=l.findByStoreName("GuildMemberStore"),R=[f.i18n?.Messages?.AI_TAG,f.i18n?.Messages?.BOT_TAG_SERVER,f.i18n?.Messages?.SYSTEM_DM_TAG_SYSTEM,f.i18n?.Messages?.GUILD_AUTOMOD_USER_BADGE_TEXT,f.i18n?.Messages?.REMIXING_TAG].filter(Boolean),L=[{text:"WEBHOOK",condition:function(t,r,e){return e?.isNonUserBot?.()}},{text:"OWNER",backgroundColor:d.rawColors.ORANGE_345,condition:function(t,r,e){return t?.ownerId===e?.id}},{text:f.i18n?.Messages?.BOT_TAG_BOT||"BOT",condition:function(t,r,e){return e?.bot},verified:function(t,r,e){return e?.isVerifiedBot?.()}},{text:"ADMIN",backgroundColor:d.rawColors.RED_560,permissions:["ADMINISTRATOR"]},{text:"MANAGER",backgroundColor:d.rawColors.GREEN_345,permissions:["MANAGE_GUILD","MANAGE_CHANNELS","MANAGE_ROLES","MANAGE_WEBHOOKS"]},{text:"MOD",backgroundColor:d.rawColors.BLUE_345,permissions:["MANAGE_MESSAGES","KICK_MEMBERS","BAN_MEMBERS"]}];function h(t,r,e){try{if(!e)return null;let s;if(t&&N&&A)try{const n=N({user:e,context:t,overwrites:r?.permissionOverwrites});s=Object.entries(A).map(function(o){let[i,a]=o;return n&a?i:""}).filter(Boolean)}catch(n){console.error("Staff Tags - Permission computation error:",n),s=[]}for(const n of L)try{const o=n.condition?.(t,r,e),i=n.permissions?.some(function(a){return s?.includes(a)});if(o||i){let a;if(y.storage.useRoleColor&&t?.id&&e?.id)try{a=O?.getMember?.(t.id,e.id)?.colorString}catch(C){console.error("Staff Tags - Role color error:",C)}let u=a||n.backgroundColor||d.rawColors.BRAND_500,c;try{c=a||!n.textColor?f.chroma(u).get("lab.l")<70?d.rawColors.WHITE_500:d.rawColors.BLACK_500:n.textColor}catch{c=d.rawColors.WHITE_500}return{...n,textColor:c,backgroundColor:u,verified:typeof n.verified=="function"?n.verified(t,r,e):n.verified??!1,condition:void 0,permissions:void 0}}}catch(o){console.error("Staff Tags - Tag processing error:",o);continue}return null}catch(s){return console.error("Staff Tags - getTag error:",s),null}}const v=l.findByName("getTagProperties",!1),P=l.findByStoreName("GuildStore"),U=l.findByStoreName("ChannelStore");function $(){return v?p.after("default",v,function(t,r){let[{message:e}]=t;try{if(!r||!e||R.includes(r.tagText))return r;const s=U?.getChannel?.(e.channel_id),n=P?.getGuild?.(s?.guild_id),o=h(n,s,e.author);if(o)return{...r,tagText:o.text,tagTextColor:o.textColor?f.ReactNative.processColor(f.chroma(o.textColor).hex()):void 0,tagBackgroundColor:o.backgroundColor?f.ReactNative.processColor(f.chroma(o.backgroundColor).hex()):void 0,tagVerified:o.verified,tagType:void 0}}catch(s){console.error("Staff Tags - Chat patch error:",s)}return r}):(console.error("Staff Tags - getTagProperties not found"),function(){})}const S=l.findByProps("getBotLabel"),_=l.findByStoreName("GuildStore"),b=l.findByName("DefaultName",!1),G=l.findByName("DisplayName",!1);function H(){const t=[];return b&&t.push(p.after("default",b,function(r,e){let[s]=r;try{const n=s?.user,o=s?.guildId;if(!n||!e)return e;const i=_?.getGuild?.(o),a=h(i,null,n);a&&S?.default&&e.props?.children[0]?.props?.children?.push(React.createElement(S.default,{type:0,text:a.text+"[DEFAULT]",textColor:a.textColor,backgroundColor:a.backgroundColor,verified:a.verified}))}catch{}return e})),G&&t.push(p.after("default",G,function(r,e){let[s]=r;try{const n=s?.user,o=s?.guildId;if(!n||!e)return e;const i=_?.getGuild?.(o),a=h(i,null,n);a&&S?.default&&e.props?.children?.props?.children[0]?.props?.children?.push(React.createElement(S.default,{type:0,text:a.text+"[DISPLAY]",textColor:a.textColor,backgroundColor:a.backgroundColor,verified:a.verified}))}catch{}return e})),function(){t.forEach(function(r){try{r?.()}catch{}})}}const I=l.findByName("DisplayName",!1),M=l.findByName("HeaderName",!1),B=l.findByProps("getBotLabel"),k=B?.getBotLabel,K=l.findByStoreName("GuildStore"),V=l.findByStoreName("ChannelStore");function W(){const t=[];return M&&t.push(p.after("default",M,function(r,e){let[{channelId:s}]=r;try{e?.props&&(e.props.channelId=s)}catch(n){console.error("Staff Tags - HeaderName patch error:",n)}})),I&&t.push(p.after("default",I,function(r,e){let[{guildId:s,channelId:n,user:o}]=r;try{if(!e||!k)return;const i=T.findInReactTree(e,function(a){return a?.type?.Types});if(!i||!R.includes(k(i.props?.type))){const a=K?.getGuild?.(s),u=V?.getChannel?.(n),c=h(a,u,o);if(c&&B?.default)if(i)i.props={type:0,...c};else{const C=T.findInReactTree(e,function(ee){return ee?.props?.style?.flexDirection==="row"});C?.props?.children&&Array.isArray(C.props.children)&&C.props.children.push(React.createElement(B.default,{style:{marginLeft:0},type:0,text:c.text,textColor:c.textColor,backgroundColor:c.backgroundColor,verified:c.verified}))}}}catch(i){console.error("Staff Tags - DisplayName patch error:",i)}})),function(){return t.forEach(function(r){try{r?.()}catch(e){console.error("Staff Tags - Name unpatch error:",e)}})}}const m=l.findByProps("getBotLabel"),F=l.findByStoreName("GuildStore");function Y(){const t=[],r=function(e,s){let[{user:n,guildId:o}]=e;try{if(!s||!n||!o)return s;const i=F?.getGuild?.(o),a=h(i,null,n);if(a&&m?.default){const u=T.findInReactTree(s,function(c){return c?.props?.style?.flexDirection==="row"});u?.props?.children&&Array.isArray(u.props.children)&&(u.props.children.find(function(c){return c?.key==="StaffTagsInsert"})||u.props.children.splice(2,0,React.createElement(m.default,{key:"StaffTagsInsert",type:0,text:a.text,textColor:a.textColor,backgroundColor:a.backgroundColor,verified:a.verified})))}}catch{}return s};return l.findByTypeNameAll("UserRow").forEach(function(e){return t.push(p.after("type",e,r))}),function(){t.forEach(function(e){try{e?.()}catch{}})}}const j=l.findByProps("getBotLabel");function X(){return p.after("default",j,function(t,r){let[{text:e,textColor:s,backgroundColor:n}]=t;try{const o=T.findInReactTree(r,function(i){return typeof i?.props?.children=="string"});o?.props&&(e&&(o.props.children=e),s&&(o.props.style||(o.props.style=[]),Array.isArray(o.props.style)?o.props.style.push({color:s}):o.props.style=[o.props.style,{color:s}])),n&&r?.props&&(r.props.style||(r.props.style=[]),Array.isArray(r.props.style)?r.props.style.push({backgroundColor:n}):r.props.style=[r.props.style,{backgroundColor:n}])}catch(o){console.error("Staff Tags - Tag patch error:",o)}})}const{ScrollView:q}=x.General,{FormSection:z,FormSwitchRow:J}=x.Forms;function Q(){return w.useProxy(y.storage),React.createElement(q,{style:{flex:1}},React.createElement(z,{title:"Tag style"},React.createElement(J,{label:"Use top role color for tag backgrounds",value:y.storage.useRoleColor,onValueChange:function(t){y.storage.useRoleColor=t}})))}let g=[];var Z={onLoad:function(){try{y.storage.useRoleColor??=!1,g.push($()),g.push(X()),g.push(W()),g.push(Y()),g.push(H()),console.log("Staff Tags loaded successfully")}catch(t){throw console.error("Staff Tags - Load error:",t),t}},onUnload:function(){try{g.forEach(function(t){try{t?.()}catch(r){console.error("Staff Tags - Unpatch error:",r)}}),g=[],console.log("Staff Tags unloaded successfully")}catch(t){console.error("Staff Tags - Unload error:",t)}},settings:Q};return E.default=Z,Object.defineProperty(E,"__esModule",{value:!0}),E})({},vendetta.plugin,vendetta.metro,vendetta.metro.common,vendetta.patcher,vendetta.ui,vendetta.utils,vendetta.storage,vendetta.ui.components);
