(function(B,h,i,f,y,d,p,k,A){"use strict";const{Permissions:N}=f.constants,O=i.findByProps("computePermissions","canEveryoneRole"),x=O?.computePermissions,L=i.findByStoreName("GuildMemberStore"),S=[f.i18n?.Messages?.AI_TAG,f.i18n?.Messages?.BOT_TAG_SERVER,f.i18n?.Messages?.SYSTEM_DM_TAG_SYSTEM,f.i18n?.Messages?.GUILD_AUTOMOD_USER_BADGE_TEXT,f.i18n?.Messages?.REMIXING_TAG].filter(Boolean),D=[{text:"WEBHOOK",condition:function(t,e,r){return r?.isNonUserBot?.()}},{text:"OWNER",backgroundColor:d.rawColors.ORANGE_345,condition:function(t,e,r){return t?.ownerId===r?.id}},{text:f.i18n?.Messages?.BOT_TAG_BOT||"BOT",condition:function(t,e,r){return r?.bot},verified:function(t,e,r){return r?.isVerifiedBot?.()}},{text:"ADMIN",backgroundColor:d.rawColors.RED_560,permissions:["ADMINISTRATOR"]},{text:"MANAGER",backgroundColor:d.rawColors.GREEN_345,permissions:["MANAGE_GUILD","MANAGE_CHANNELS","MANAGE_ROLES","MANAGE_WEBHOOKS"]},{text:"MOD",backgroundColor:d.rawColors.BLUE_345,permissions:["MANAGE_MESSAGES","KICK_MEMBERS","BAN_MEMBERS"]}];function C(t,e,r){try{if(!r)return null;let a;if(t&&x&&N)try{const n=x({user:r,context:t,overwrites:e?.permissionOverwrites});a=Object.entries(N).map(function(o){let[l,s]=o;return n&s?l:""}).filter(Boolean)}catch(n){console.error("Staff Tags - Permission computation error:",n),a=[]}for(const n of D)try{const o=n.condition?.(t,e,r),l=n.permissions?.some(function(s){return a?.includes(s)});if(o||l){let s;if(h.storage.useRoleColor&&t?.id&&r?.id)try{s=L?.getMember?.(t.id,r.id)?.colorString}catch(T){console.error("Staff Tags - Role color error:",T)}let u=s||n.backgroundColor||d.rawColors.BRAND_500,c;try{c=s||!n.textColor?f.chroma(u).get("lab.l")<70?d.rawColors.WHITE_500:d.rawColors.BLACK_500:n.textColor}catch{c=d.rawColors.WHITE_500}return{...n,textColor:c,backgroundColor:u,verified:typeof n.verified=="function"?n.verified(t,e,r):n.verified??!1,condition:void 0,permissions:void 0}}}catch(o){console.error("Staff Tags - Tag processing error:",o);continue}return null}catch(a){return console.error("Staff Tags - getTag error:",a),null}}const v=i.findByName("getTagProperties",!1),P=i.findByStoreName("GuildStore"),U=i.findByStoreName("ChannelStore");function $(){return v?y.after("default",v,function(t,e){let[{message:r}]=t;try{if(!e||!r||S.includes(e.tagText))return e;const a=U?.getChannel?.(r.channel_id),n=P?.getGuild?.(a?.guild_id),o=C(n,a,r.author);if(o)return{...e,tagText:o.text,tagTextColor:o.textColor?f.ReactNative.processColor(f.chroma(o.textColor).hex()):void 0,tagBackgroundColor:o.backgroundColor?f.ReactNative.processColor(f.chroma(o.backgroundColor).hex()):void 0,tagVerified:o.verified,tagType:void 0}}catch(a){console.error("Staff Tags - Chat patch error:",a)}return e}):(console.error("Staff Tags - getTagProperties not found"),function(){})}const E=i.findByProps("getBotLabel"),G=E?.getBotLabel,H=i.findByStoreName("GuildStore"),F=function(t,e){let[{guildId:r,user:a}]=t;try{if(!e?.props?.label||!G)return e;const n=p.findInReactTree(e.props.label,function(l){return l?.type?.Types}),o=n?G(n.props?.type):null;if(!n||!S.includes(o)){const l=H?.getGuild?.(r),s=C(l,void 0,a);if(s&&E?.default)if(n)n.props={type:0,...s};else{const u=p.findInReactTree(e.props.label,function(c){return c?.props?.lineClamp});if(u?.props?.children?.props?.children){const c=u.props.children.props.children;Array.isArray(c)&&c.length>1&&(c[1]=React.createElement(React.Fragment,null," ",React.createElement(E.default,{type:0,text:s.text,textColor:s.textColor,backgroundColor:s.backgroundColor,verified:s.verified})))}}}}catch(n){console.error("Staff Tags - Details patch error:",n)}return e};function K(){const t=[];try{const e=i.findByTypeNameAll("UserRow");e?.length>0&&e.forEach(function(r){r?.type&&t.push(y.after("type",r,F))})}catch(e){console.error("Staff Tags - Failed to patch UserRow:",e)}return function(){t.forEach(function(e){try{e?.()}catch(r){console.error("Staff Tags - Unpatch error:",r)}})}}const _=i.findByName("DisplayName",!1),M=i.findByName("HeaderName",!1),R=i.findByProps("getBotLabel"),I=R?.getBotLabel,V=i.findByStoreName("GuildStore"),W=i.findByStoreName("ChannelStore");function j(){const t=[];return M&&t.push(y.after("default",M,function(e,r){let[{channelId:a}]=e;try{r?.props&&(r.props.channelId=a)}catch(n){console.error("Staff Tags - HeaderName patch error:",n)}})),_&&t.push(y.after("default",_,function(e,r){let[{guildId:a,channelId:n,user:o}]=e;try{if(!r||!I)return;const l=p.findInReactTree(r,function(s){return s?.type?.Types});if(!l||!S.includes(I(l.props?.type))){const s=V?.getGuild?.(a),u=W?.getChannel?.(n),c=C(s,u,o);if(c&&R?.default)if(l)l.props={type:0,...c};else{const T=p.findInReactTree(r,function(te){return te?.props?.style?.flexDirection==="row"});T?.props?.children&&Array.isArray(T.props.children)&&T.props.children.push(React.createElement(R.default,{style:{marginLeft:0},type:0,text:c.text,textColor:c.textColor,backgroundColor:c.backgroundColor,verified:c.verified}))}}}catch(l){console.error("Staff Tags - DisplayName patch error:",l)}})),function(){return t.forEach(function(e){try{e?.()}catch(r){console.error("Staff Tags - Name unpatch error:",r)}})}}const m=i.findByProps("GuildMemberRow"),b=i.findByProps("getBotLabel"),w=b?.getBotLabel,X=i.findByStoreName("GuildStore");function Y(){return m?.GuildMemberRow?y.after("type",m.GuildMemberRow,function(t,e){let[{guildId:r,channel:a,user:n}]=t;try{if(!e||!w)return e;const o=p.findInReactTree(e,function(l){return l?.type?.Types});if(!o||!S.includes(w(o.props?.type))){const l=X?.getGuild?.(r),s=C(l,a,n);if(s&&b?.default)if(o)o.props={type:0,...s};else{const u=p.findInReactTree(e,function(c){return c?.props?.style?.flexDirection==="row"});u?.props?.children&&Array.isArray(u.props.children)&&u.props.children.splice(2,0,React.createElement(b.default,{type:0,text:s.text,textColor:s.textColor,backgroundColor:s.backgroundColor,verified:s.verified}))}}}catch(o){console.error("Staff Tags - Sidebar patch error:",o)}return e}):(console.error("Staff Tags - GuildMemberRow not found"),function(){})}const q=i.findByProps("getBotLabel");function z(){return y.after("default",q,function(t,e){let[{text:r,textColor:a,backgroundColor:n}]=t;try{const o=p.findInReactTree(e,function(l){return typeof l?.props?.children=="string"});o?.props&&(r&&(o.props.children=r),a&&(o.props.style||(o.props.style=[]),Array.isArray(o.props.style)?o.props.style.push({color:a}):o.props.style=[o.props.style,{color:a}])),n&&e?.props&&(e.props.style||(e.props.style=[]),Array.isArray(e.props.style)?e.props.style.push({backgroundColor:n}):e.props.style=[e.props.style,{backgroundColor:n}])}catch(o){console.error("Staff Tags - Tag patch error:",o)}})}const{ScrollView:J}=A.General,{FormSection:Q,FormSwitchRow:Z}=A.Forms;function ee(){return k.useProxy(h.storage),React.createElement(J,{style:{flex:1}},React.createElement(Q,{title:"Tag style"},React.createElement(Z,{label:"Use top role color for tag backgrounds",value:h.storage.useRoleColor,onValueChange:function(t){h.storage.useRoleColor=t}})))}let g=[];var re={onLoad:function(){try{h.storage.useRoleColor??=!1,g.push($()),g.push(z()),g.push(j()),g.push(Y()),g.push(K()),console.log("Staff Tags loaded successfully")}catch(t){throw console.error("Staff Tags - Load error:",t),t}},onUnload:function(){try{g.forEach(function(t){try{t?.()}catch(e){console.error("Staff Tags - Unpatch error:",e)}}),g=[],console.log("Staff Tags unloaded successfully")}catch(t){console.error("Staff Tags - Unload error:",t)}},settings:ee};return B.default=re,Object.defineProperty(B,"__esModule",{value:!0}),B})({},vendetta.plugin,vendetta.metro,vendetta.metro.common,vendetta.patcher,vendetta.ui,vendetta.utils,vendetta.storage,vendetta.ui.components);
