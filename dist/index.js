(function(A,C,c,f,T,y,p,P,G){"use strict";const{Permissions:v}=f.constants,F=c.findByProps("computePermissions","canEveryoneRole"),_=F?.computePermissions,H=c.findByStoreName("GuildMemberStore"),B=[f.i18n?.Messages?.AI_TAG,f.i18n?.Messages?.BOT_TAG_SERVER,f.i18n?.Messages?.SYSTEM_DM_TAG_SYSTEM,f.i18n?.Messages?.GUILD_AUTOMOD_USER_BADGE_TEXT,f.i18n?.Messages?.REMIXING_TAG].filter(Boolean),K=[{text:"WEBHOOK",condition:function(t,e,r){return r?.isNonUserBot?.()}},{text:"OWNER",backgroundColor:y.rawColors.ORANGE_345,condition:function(t,e,r){return t?.ownerId===r?.id}},{text:f.i18n?.Messages?.BOT_TAG_BOT||"BOT",condition:function(t,e,r){return r?.bot},verified:function(t,e,r){return r?.isVerifiedBot?.()}},{text:"ADMIN",backgroundColor:y.rawColors.RED_560,permissions:["ADMINISTRATOR"]},{text:"MANAGER",backgroundColor:y.rawColors.GREEN_345,permissions:["MANAGE_GUILD","MANAGE_CHANNELS","MANAGE_ROLES","MANAGE_WEBHOOKS"]},{text:"MOD",backgroundColor:y.rawColors.BLUE_345,permissions:["MANAGE_MESSAGES","KICK_MEMBERS","BAN_MEMBERS"]}];function b(t,e,r){try{if(!r)return null;let a;if(t&&_&&v)try{const n=_({user:r,context:t,overwrites:e?.permissionOverwrites});a=Object.entries(v).map(function(o){let[i,s]=o;return n&s?i:""}).filter(Boolean)}catch(n){console.error("Staff Tags - Permission computation error:",n),a=[]}for(const n of K)try{const o=n.condition?.(t,e,r),i=n.permissions?.some(function(s){return a?.includes(s)});if(o||i){let s;if(C.storage.useRoleColor&&t?.id&&r?.id)try{s=H?.getMember?.(t.id,r.id)?.colorString}catch(d){console.error("Staff Tags - Role color error:",d)}let g=s||n.backgroundColor||y.rawColors.BRAND_500,l;try{l=s||!n.textColor?f.chroma(g).get("lab.l")<70?y.rawColors.WHITE_500:y.rawColors.BLACK_500:n.textColor}catch{l=y.rawColors.WHITE_500}return{...n,textColor:l,backgroundColor:g,verified:typeof n.verified=="function"?n.verified(t,e,r):n.verified??!1,condition:void 0,permissions:void 0}}}catch(o){console.error("Staff Tags - Tag processing error:",o);continue}return null}catch(a){return console.error("Staff Tags - getTag error:",a),null}}const w=c.findByName("getTagProperties",!1),V=c.findByStoreName("GuildStore"),W=c.findByStoreName("ChannelStore");function j(){return w?T.after("default",w,function(t,e){let[{message:r}]=t;try{if(!e||!r||B.includes(e.tagText))return e;const a=W?.getChannel?.(r.channel_id),n=V?.getGuild?.(a?.guild_id),o=b(n,a,r.author);if(o)return{...e,tagText:o.text,tagTextColor:o.textColor?f.ReactNative.processColor(f.chroma(o.textColor).hex()):void 0,tagBackgroundColor:o.backgroundColor?f.ReactNative.processColor(f.chroma(o.backgroundColor).hex()):void 0,tagVerified:o.verified,tagType:void 0}}catch(a){console.error("Staff Tags - Chat patch error:",a)}return e}):(console.error("Staff Tags - getTagProperties not found"),function(){})}const N=c.findByProps("getBotLabel"),I=N?.getBotLabel,X=c.findByStoreName("GuildStore"),Y=function(t,e){let[{guildId:r,user:a}]=t;try{if(!e?.props?.label||!I)return e;const n=p.findInReactTree(e.props.label,function(i){return i?.type?.Types}),o=n?I(n.props?.type):null;if(!n||!B.includes(o)){const i=X?.getGuild?.(r),s=b(i,void 0,a);if(s&&N?.default)if(n)n.props={type:0,...s};else{const g=p.findInReactTree(e.props.label,function(l){return l?.props?.lineClamp});if(g?.props?.children?.props?.children){const l=g.props.children.props.children;Array.isArray(l)&&l.length>1&&(l[1]=React.createElement(React.Fragment,null," ",React.createElement(N.default,{type:0,text:s.text,textColor:s.textColor,backgroundColor:s.backgroundColor,verified:s.verified})))}}}}catch(n){console.error("Staff Tags - Details patch error:",n)}return e};function q(){const t=[];try{const e=c.findByTypeNameAll("UserRow");e?.length>0&&e.forEach(function(r){r?.type&&t.push(T.after("type",r,Y))})}catch(e){console.error("Staff Tags - Failed to patch UserRow:",e)}return function(){t.forEach(function(e){try{e?.()}catch(r){console.error("Staff Tags - Unpatch error:",r)}})}}const k=c.findByName("DisplayName",!1),L=c.findByName("HeaderName",!1),m=c.findByProps("getBotLabel"),O=m?.getBotLabel,z=c.findByStoreName("GuildStore"),J=c.findByStoreName("ChannelStore");function Q(){const t=[];return L&&t.push(T.after("default",L,function(e,r){let[{channelId:a}]=e;try{r?.props&&(r.props.channelId=a)}catch(n){console.error("Staff Tags - HeaderName patch error:",n)}})),k&&t.push(T.after("default",k,function(e,r){let[{guildId:a,channelId:n,user:o}]=e;try{if(!r||!O)return;const i=p.findInReactTree(r,function(s){return s?.type?.Types});if(!i||!B.includes(O(i.props?.type))){const s=z?.getGuild?.(a),g=J?.getChannel?.(n),l=b(s,g,o);if(l&&m?.default)if(i)i.props={type:0,...l};else{const d=p.findInReactTree(r,function(R){return R?.props?.style?.flexDirection==="row"});d?.props?.children&&Array.isArray(d.props.children)&&d.props.children.push(React.createElement(m.default,{style:{marginLeft:0},type:0,text:l.text,textColor:l.textColor,backgroundColor:l.backgroundColor,verified:l.verified}))}}}catch(i){console.error("Staff Tags - DisplayName patch error:",i)}})),function(){return t.forEach(function(e){try{e?.()}catch(r){console.error("Staff Tags - Name unpatch error:",r)}})}}const U=c.findByProps("GuildMemberRow"),E=c.findByProps("getBotLabel"),x=E?.getBotLabel,$=c.findByStoreName("GuildStore");function Z(){const t=[];console.log("Staff Tags - Sidebar patch setup:",{hasRows:!!U?.GuildMemberRow,hasTagModule:!!E?.default,hasBotLabel:!!x,hasGuildStore:!!$});const e=[U?.GuildMemberRow,...c.findByTypeNameAll("GuildMemberRow"),...c.findByTypeNameAll("MemberRow"),...c.findByTypeNameAll("UserRow").filter(function(r){return r.name?.includes("Member")})].filter(Boolean);return console.log("Staff Tags - Found member row components:",e.length),e.forEach(function(r,a){try{console.log(`Staff Tags - Patching component ${a}:`,r.name||r.displayName||"Unknown"),t.push(T.after("type",r,function(n,o){let[i]=n;try{const{guildId:s,channel:g,user:l}=i||{};if(!o||!x||!l)return o;const d=p.findInReactTree(o,function(R){return R?.type?.Types});if(!d||!B.includes(x(d.props?.type))){const R=$?.getGuild?.(s),S=b(R,g,l);if(S&&E?.default)if(d)d.props={type:0,...S};else{const D=[function(){return p.findInReactTree(o,function(u){return u?.props?.style?.flexDirection==="row"})},function(){return p.findInReactTree(o,function(u){return Array.isArray(u?.props?.children)&&u.props.children.length>1})},function(){return p.findInReactTree(o,function(u){return u?.props?.children&&!u.type?.Types})}];for(let u=0;u<D.length;u++){const M=D[u]();if(M?.props?.children&&Array.isArray(M.props.children)){console.log(`Staff Tags - Using strategy ${u+1} for ${l.username}`),M.props.children.push(React.createElement(E.default,{type:0,text:S.text,textColor:S.textColor,backgroundColor:S.backgroundColor,verified:S.verified}));break}}}}}catch(s){console.error("Staff Tags - Member row patch error:",s)}return o}))}catch(n){console.error(`Staff Tags - Failed to patch component ${a}:`,n)}}),t.length===0&&console.warn("Staff Tags - No member row components found to patch"),function(){t.forEach(function(r){try{r?.()}catch(a){console.error("Staff Tags - Sidebar unpatch error:",a)}})}}const ee=c.findByProps("getBotLabel");function re(){return T.after("default",ee,function(t,e){let[{text:r,textColor:a,backgroundColor:n}]=t;try{const o=p.findInReactTree(e,function(i){return typeof i?.props?.children=="string"});o?.props&&(r&&(o.props.children=r),a&&(o.props.style||(o.props.style=[]),Array.isArray(o.props.style)?o.props.style.push({color:a}):o.props.style=[o.props.style,{color:a}])),n&&e?.props&&(e.props.style||(e.props.style=[]),Array.isArray(e.props.style)?e.props.style.push({backgroundColor:n}):e.props.style=[e.props.style,{backgroundColor:n}])}catch(o){console.error("Staff Tags - Tag patch error:",o)}})}const{ScrollView:te}=G.General,{FormSection:oe,FormSwitchRow:ne}=G.Forms;function ae(){return P.useProxy(C.storage),React.createElement(te,{style:{flex:1}},React.createElement(oe,{title:"Tag style"},React.createElement(ne,{label:"Use top role color for tag backgrounds",value:C.storage.useRoleColor,onValueChange:function(t){C.storage.useRoleColor=t}})))}let h=[];var se={onLoad:function(){try{C.storage.useRoleColor??=!1,h.push(j()),h.push(re()),h.push(Q()),h.push(Z()),h.push(q()),console.log("Staff Tags loaded successfully")}catch(t){throw console.error("Staff Tags - Load error:",t),t}},onUnload:function(){try{h.forEach(function(t){try{t?.()}catch(e){console.error("Staff Tags - Unpatch error:",e)}}),h=[],console.log("Staff Tags unloaded successfully")}catch(t){console.error("Staff Tags - Unload error:",t)}},settings:ae};return A.default=se,Object.defineProperty(A,"__esModule",{value:!0}),A})({},vendetta.plugin,vendetta.metro,vendetta.metro.common,vendetta.patcher,vendetta.ui,vendetta.utils,vendetta.storage,vendetta.ui.components);
